/*
 * Apply plugins by Id or from a file (locally or remotely)
 */

apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'spring-boot'

defaultTasks 'clean', 'test', 'war'

group = "com.keeperofthevoid.temp"
description = ""

buildscript {
    ext {
        baseProjectName = "temp-api"
        baseVersion = "0.1"
        snapshotVersion = true

        // Previous versions
        // Spring Security: 3.2.5.RELEASE 
        // Spring: 4.1.6.RELEASE
        // Spring Boot: 1.2.1. RELEASE
        // Spring Data JPA: 1.7.1.RELEASE
        // Spring WS: 2.2.1.RELEASE
        // Hibernate: 4.3.7.Final
        groovyVersion = '2.4.5'
        tomcatVersion = '7.0.57'
        springSecurityVersion = '4.0.3.RELEASE'
        springVersion = '4.2.3.RELEASE'
        springBootVersion = '1.3.0.RELEASE'
        springDataJpaVersion = '1.9.1.RELEASE'
        springWsVersion = '2.2.2.RELEASE'
        hibernateVersion = '5.0.5.Final'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        // allows for hot swapping java classes when compiled while spring boot is running
        // additional customization is required when running intellij
        classpath "org.springframework:springloaded:1.2.1.RELEASE"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"
    providedRuntime "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion"
    providedRuntime "org.apache.tomcat.embed:tomcat-embed-el:$tomcatVersion"
    providedRuntime "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion"
    providedRuntime "org.apache.tomcat:tomcat7-websocket:$tomcatVersion"

    // specify version for groovy with groovy plugin
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

    // JDBC Drivers - Uncomment which ever ones apply to your app
    compile "mysql:mysql-connector-java:5.1.22"
    // sqlserver for arbaf
    //compile "com.microsoft.sqlserver.jdbc:sqljdbc4:3.0"
    // h2 for testing locally
    compile "com.h2database:h2"
    // obiwan db of choice
    //compile "com.oracle:ojdbc6:11.2.0.2"

    // DB Connection pooling and hibernate entity manager
    compile "com.zaxxer:HikariCP-java6:2.2.5"
    compile "org.hibernate:hibernate-hikaricp:$hibernateVersion"
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.springframework.data:spring-data-jpa:$springDataJpaVersion"

    // Spring Container Core Libs
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-jms:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-oxm:$springVersion"
    compile "org.springframework.ws:spring-ws-core:$springWsVersion"

    // Spring Boot
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-remote-shell:$springBootVersion"

    // Logging
    /* log4j */
    compile "log4j:log4j:1.2.16"

    /* slf4j */
    //compile "org.slf4j:slf4j-api:1.6.1"
    //compile "org.slf4j:slf4j-log4j12:1.6.1"
    //compile "org.slf4j:jcl-over-slf4j:1.6.1"

    // Util Libs
    compile "joda-time:joda-time:2.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.5.4"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.1"
    compile "org.springframework.ldap:spring-ldap-core:2.0.2.RELEASE"
    // spring-ldap-core is putting commons-lang in the test scope
    // thus we need to explicitly add it because it will not be visible in compile time
    compile "commons-lang:commons-lang:2.6"
    compile "net.sf.ehcache:ehcache:2.9.1"
    compile "org.springframework:spring-context-support:$springVersion"
    compile "com.allanditzel:spring-security-csrf-token-filter:1.1"

    // Web Container Libs
    compile "org.springframework:spring-webmvc:$springVersion"

    // Support for bean validation
    compile "javax.validation:validation-api:1.1.0.Final"
    compile "org.hibernate:hibernate-validator:5.1.3.Final"
    compile "org.jsoup:jsoup:1.7.2"

    //Security
    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-ldap:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"

    //Spring Integration Libs - Include these to enable spring integration
    /*
    compile "org.springframework.integration:spring-integration-core:2.2.0.RELEASE"
    compile "org.springframework.integration:spring-integration-jms:2.2.0.RELEASE"
    compile "org.springframework.integration:spring-integration-stream:2.2.0.RELEASE"
    compile "org.springframework.integration:spring-integration-jdbc:2.2.0.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-integration:$springBootVersion"
    */

    //JMS - Uncomment if you are connecting to TIBCO EMS
    /*
    //Used as a client for ActiveMQ and RabbitMQ, replace with EMS for tibco
    compile "org.springframework.boot:spring-boot-starter-amqp:$springBootVersion"
    compile("org.apache.activemq:activemq-core:5.7.0"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile "tibco:tibjms:4.3.0"
    */

    //Spring GemFire Caching
    //compile "org.springframework.data:spring-data-gemfire:1.2.2.RELEASE"
    //provided "com.gemstone.gemfire:gemfire:7"

    /* ClamAV */
    //compile "com.heb.clamav:clamav:0.0.1"

    /* Testing tools */
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "org.skyscreamer:jsonassert:1.2.3"
    // TDD
    testCompile "org.powermock:powermock-module-junit4:1.4.10"
    testCompile "org.powermock:powermock-api-mockito:1.4.10"
    testCompile "org.easymock:easymock:3.1"
    testCompile "org.powermock:powermock-api-easymock:1.4.10"
    // BDD
    //testCompile "org.spockframework:spock-core:1.0-groovy-2.3"
    //testCompile "org.spockframework:spock-spring:1.0-groovy-2.3"
}

/*
 * Additional customization to the build
 */

/*
 * Re-generate the gradlew scripts.
 * You should always be using gradlew instead of gradle. Look up the Gradle wrapper in the docs for more info.
 */
/*task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}*/

task copyWeb(type: Copy) {
    from "src/main/resources/public"
    into "$buildDir/libs/web"
}

war {
    dependsOn copyWeb

    from "src/main/resources"
    exclude "public"
    baseName = "$baseProjectName"
    archiveName = baseName + ".war"
}

allprojects {
    version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
}

bootRun {
    systemProperty "spring.profiles.active", "local"
    jvmArgs "-Xmx2048m", "-XX:MaxPermSize=1024m", "-Xms512m"
}

idea {
    module {
        inheritOutputDirs = false
        // this allows spring boot to read what intellij has compiled
        outputDir = file("$buildDir/classes/main/")
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint"
}

